<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    
<mapper namespace="mappers.task">

	<!-- 업무 생성 : 스케줄 테이블 동시 생성-->
	<insert id="taskInsert" parameterType="Map">
		INSERT ALL
		  INTO schedule VALUES (SEQ_SCHE.NEXTVAL, #{m_id}, #{task_name}, #{task_content}, SYSDATE, #{set_startdate}, #{set_enddate}, 0,0, 'ORANGE','TASK')
		  INTO task VALUES (SEQ_TASK.NEXTVAL, #{m_id}, #{project_no}, SEQ_SCHE.CURRVAL, #{task_name}, #{task_content}, #{task_category}, DEFAULT)
		SELECT * FROM DUAL
	</insert>
	
	<!-- 업무 상세보기 -->
	<select id="taskSelectOne" parameterType="Map" resultType="Map">
		SELECT T1.*, s.sche_startdate, s.sche_enddate FROM 
		(SELECT t.*, m.m_name FROM task t JOIN members m ON m.m_id = t.m_id)T1
		JOIN schedule s ON s.sche_no = T1.sche_no WHERE T1.task_no=#{task_no}
	</select>
	
	<!-- 페이징을 위한 업무 레코드 수 카운트 - 검색용  -->
	<select id="taskTotalRecordCount" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM(
			SELECT T2.*,s.sche_title, s.sche_startdate, s.sche_enddate FROM
			(SELECT t.*, T1.project_name FROM
				(SELECT pml.project_no, p.project_name FROM PROJ_M_LIST pml 
					JOIN PROJECT p ON pml.project_no=p.project_no
					WHERE pml.m_id=#{loginId})T1
					JOIN TASK t ON t.project_no=T1.project_no
				WHERE t.project_no=T1.project_no)T2
				JOIN SCHEDULE s ON s.sche_no = T2.sche_no
			WHERE s.sche_no = T2.sche_no
			<if test="searchColumn != null and searchColumn != ''">
				AND (${searchColumn} LIKE '%' || #{searchWord} || '%')
			</if>
			<if test="set_startdate != null and set_startdate != ''">
				AND (s.sche_startdate>=#{set_startdate} AND #{set_enddate}>=s.sche_startdate)
			</if>
		)
	</select>
	
	<!-- 페이징을 위한 업무 리스트 출력 (검색 포함 - 문자열) -->
	<select id="taskFindAllList" parameterType="Map" resultType="Map">
		SELECT T2.*,s.sche_title, s.sche_startdate, s.sche_enddate FROM
			(SELECT t.*, T1.project_name FROM
				(SELECT pml.project_no, p.project_name FROM PROJ_M_LIST pml 
					JOIN PROJECT p ON pml.project_no=p.project_no
					WHERE pml.m_id=#{loginId})T1
					JOIN TASK t ON t.project_no=T1.project_no
				WHERE t.project_no=T1.project_no)T2
				JOIN SCHEDULE s ON s.sche_no = T2.sche_no
			WHERE s.sche_no = T2.sche_no
			<if test="searchColumn != null and searchColumn != ''">
				AND (${searchColumn} LIKE '%' || #{searchWord} || '%')	
			</if>
			<if test="set_startdate != null and set_startdate != ''">
				AND (s.sche_startdate>=#{set_startdate} AND #{set_enddate}>=s.sche_startdate)
			</if>
	</select>
	
	<!-- 페이징을 위한 업무 레코드 수 카운트 - 프로젝트 하위 업무 셀렉트 용  -->
	<select id="taskTotalRecordCountByProj" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM(
			SELECT T2.*,tm.team_name,tm.dept_code FROM
				(SELECT T1.*,m.m_name,m.team_no FROM
					(SELECT t.*,s.sche_startdate, s.sche_enddate FROM TASK t
					JOIN schedule s ON s.sche_no = t.sche_no)T1
				JOIN members m ON T1.m_id=m.m_id)T2
			JOIN team tm ON T2.team_no=tm.team_no	
		WHERE T2.project_no = #{project_no}
		)
	</select>
	
	<!-- 페이징을 위한 업무 리스트 출력 - 프로젝트 하위 업무 셀렉트 용 -->
	<select id="taskFindAllListByProj" parameterType="Map" resultType="Map">
		SELECT T2.*,tm.team_name,tm.dept_code FROM
				(SELECT T1.*,m.m_name,m.team_no FROM
					(SELECT t.*,s.sche_startdate, s.sche_enddate FROM TASK t
					JOIN schedule s ON s.sche_no = t.sche_no)T1
				JOIN members m ON T1.m_id=m.m_id)T2
			JOIN team tm ON T2.team_no=tm.team_no	
		WHERE T2.project_no = #{project_no}
	</select>
	
	<!-- 수정용 sche_no 구하는 쿼리 -->
	<select id="taskGetScheNo" parameterType="int" resultType="int">
		SELECT sche_no FROM task WHERE task_no=#{task_no}
	</select>
	
	<!-- 회원 체크용 -->
	<select id="taskCheckMember" parameterType="Map" resultType="String">
		SELECT m_id FROM task WHERE task_no=#{task_no}
	</select>
	
	<!-- 업무 수정 -->
	<update id="taskUpdateTTable" parameterType="Map">
		UPDATE task SET task_name=#{task_name},task_content=#{task_content},m_id=#{m_id},task_progress=#{task_progress} WHERE task_no=#{task_no}
	</update>
	<update id="taskUpdateSTable" parameterType="Map" >
		UPDATE schedule SET sche_startdate=#{sche_startdate},sche_enddate=#{sche_enddate} WHERE sche_no=#{sche_no}
	</update>
	
	<!-- 진행도 수정 -->
	<update id="taskUpdateProgress" parameterType="Map">
		UPDATE task SET task_progress=#{task_progress} WHERE task_no=#{task_no}
	</update>
	
	<!-- 업무페이지 진행도 업데이트 -->
	<update id="taskProgressUpdate" parameterType="Map">
		UPDATE task SET task_progress=${task_progress} WHERE task_no=#{task_no}
	</update>
	
	<!-- 업무 하나 삭제 -->
	<delete id="taskDeleteOne" parameterType="Map">
		DELETE task WHERE task_no=#{task_no}
	</delete>
	
	<!-- 프로젝트 삭제시 자동으로 하위업무 리스트 전체 삭제 -->
	<delete id="taskDeleteList" parameterType="Map">
		DELETE task WHERE project_no=#{project_no}
	</delete>
	
	
</mapper>