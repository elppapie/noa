<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mappers.admin">

	<!-- 스프링 씨큐리티 회원 입력용 -->
	<insert id="saveUser" parameterType="Map">
		INSERT INTO members(
			m_id, 
			emp_code,
			team_no,
			m_team_leader,
			m_dept_leader,
			position_code,
			er_code,
			m_name,
			m_ssn,
			m_password,
			m_enabled,
			m_private_contact,
			m_private_email,
			m_emp_contact,
			m_hiredate,
			m_resigndate,
			m_profile_img,
			m_status,
			m_profile_msg,
			m_spare_annual
		) VALUES(
			#{m_id}, 
			#{emp_code},
			#{team_no},
			#{m_team_leader},
			#{m_dept_leader},
			#{position_code},
			#{er_code},
			#{m_name},
			#{m_ssn},
			#{m_password},
			1,
			#{m_private_contact},
			#{m_private_email},
			#{m_emp_contact},
			#{m_hiredate},
			#{m_resigndate},
			#{m_profile_img},
			#{m_status},
			#{m_profile_msg},
			#{m_spare_annual}
		)	
	</insert>
	
	<select id="getGroupList" parameterType="Map" resultType="Map">
		SELECT gml.group_no, eg.group_name, eg.m_id, eg.group_separator 
		FROM emp_group eg JOIN group_m_list gml ON gml.group_no = eg.group_no 
		GROUP BY gml.group_no, eg.group_separator, eg.group_name, eg.m_id 
		ORDER BY gml.group_no
	</select>
	
	<select id="getGroupIdList" parameterType="Map" resultType="Map">
		SELECT *
		FROM 
			(SELECT group_no, group_name, m_id, m_name, count(group_no) AS group_members
			FROM (SELECT T.m_id, m.m_name, T.group_name, T.group_no FROM	(SELECT gml.group_no, eg.group_name, eg.m_id, eg.group_separator 
			        FROM emp_group eg JOIN group_m_list gml ON gml.group_no = eg.group_no 
			        ORDER BY gml.group_no) T JOIN members m ON T.m_id = m.m_id)
			GROUP BY group_no, group_name,m_id, m_name
			ORDER BY group_no)
		<choose>
			<when test="member_list != null">
				WHERE m_id IN
				<foreach collection="member_list" item="member" open="(" close=")" separator=",">
					#{member}
				</foreach>
			</when>
		</choose>
	</select>
	
	
	
	<!-- 접속중인 사람의 소속회사 가져오기 (1/2) address.xml에 있음 -->
	<!-- 접속중인 사람의 소속회사(emp_code)에 해당하는 사람 목록 가져오기 (2/2)-->
	<select id="getMemberIdFromEmp" parameterType="Map" resultType="String">
		SELECT m_id
		FROM members 
		WHERE emp_code = #{emp_code}
	</select>
	
	<!-- 기업에 속한 구성원 목록 쫙 뿌리기용 -->
	<!-- 필요시 여기에 SELECT하는 컬럼 추가 -->
	<select id="getMemberFromEmp" parameterType="Map" resultType="Map">
		SELECT 
            d.dept_name "dept_name",
			t.team_name "team_name",
            m.m_name "m_name", 
			p.position_name "position_name", 
			m.m_id "m_id",
            m.m_private_contact "m_private_contact",
            m.m_profile_img "m_profile_img",
            m.m_hiredate "m_hiredate",
            m.m_resigndate "m_resigndate",
            m.m_enabled "m_enabled"
		FROM 
			members m
    		JOIN position p ON p.position_code = m.position_code
    		JOIN team t ON t.team_no = m.team_no
    		JOIN dept d ON d.dept_code = t.dept_code
    	WHERE
    		emp_code = #{emp_code}
    	ORDER BY 
    		d.dept_code, t.team_no
	</select>
	
	<!-- 기업의 부서 조회하기: #{emp_code}=조회할 기업 -->
	<select id="adminGetDeptOrg" parameterType="Map" resultType="Map">
		SELECT  dept_code "dept_code", dept_name "dept_name", 
			(SELECT m_id FROM members m JOIN team t ON m.team_no=t.team_no WHERE m_dept_leader IS NULL AND t.dept_code=d.dept_code
		    ) "dept_leader_id", 
		    (SELECT m_name FROM members mm JOIN team t ON mm.team_no=t.team_no WHERE m_dept_leader IS NULL AND t.dept_code=d.dept_code
		    ) "dept_leader_name",
		    (SELECT m_private_contact FROM members mmm JOIN team t ON mmm.team_no=t.team_no WHERE m_dept_leader IS NULL AND t.dept_code=d.dept_code
		    ) "dept_leader_contact",
			dept_regidate "dept_regidate"	    		    
		FROM dept d JOIN emp e ON d.emp_code=e.emp_code
		WHERE e.emp_code=#{emp_code}
		ORDER BY dept_name
	</select>
	
	<!-- 부서별 팀 조회하기 -->
	<select id="adminGetTeamOrg" parameterType="List" resultType="Map">
		SELECT tt.TEAM_NO "team_no", tt.TEAM_NAME "team_name", d.dept_code "dept_code" , d.dept_name "dept_name",
			(SELECT m_id FROM members m JOIN team t ON m.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
		    ) "team_leader_id", 
		    (SELECT m_name FROM members mm JOIN team t ON mm.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
		    ) "team_leader_name",
		    (SELECT m_private_contact FROM members mm JOIN team t ON mm.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
		    ) "team_leader_contact",
		    tt.team_regidate "team_regidate"
		FROM team tt JOIN dept d ON tt.dept_code=d.dept_code
		WHERE d.dept_code IN 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>	
	
	<select id="adminGetDeptMemberNum" parameterType="Map" resultType="Map">
        SELECT 
        	dept_code "dept_code", count(dept_code) AS "dept_member_count"
        FROM 
        	members m JOIN team t ON m.team_no = t.team_no
        WHERE 
        	emp_code = #{emp_code}
        GROUP BY 
        	dept_code
	</select>
	
	<select id="adminGetTeamMemberNum" parameterType="Map" resultType="Map">
       SELECT 
        	dept_code "dept_code", m.team_no "team_no", count(m.team_no) AS "team_member_count"
        FROM 
        	members m JOIN team t ON m.team_no = t.team_no
        WHERE 
        	m.emp_code = #{emp_code}
        GROUP BY 
        	dept_code, m.team_no
	</select>
	
		<!-- 해당 부서의 팀 조회하기 -->
	<select id="adminGetTeamListByDept" parameterType="String" resultType="Map">
		SELECT tt.TEAM_NO "team_no", tt.TEAM_NAME "team_name", d.dept_code "dept_code" , tt.TEAM_REGIDATE "team_regidate",
			(SELECT m_id FROM members m JOIN team t ON m.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
		    ) "team_leader_id", 
		    (SELECT m_name FROM members mm JOIN team t ON mm.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
		    ) "team_leader_name",
		    (SELECT m_private_contact FROM members mmm JOIN team t ON mmm.team_no=t.team_no WHERE m_team_leader IS NULL AND t.team_no=tt.team_no
            ) "team_leader_contact"
		FROM team tt JOIN dept d ON tt.dept_code=d.dept_code
		WHERE d.dept_code=#{dept_code}
	</select>
	
	
	<insert id="insertDept" parameterType="Map">
		INSERT INTO 
		dept(
			dept_code,
			emp_code,
			dept_name,
			dept_regidate
		) 
		VALUES(
			#{emp_code}||'D'||TO_NUMBER(100+SEQ_DEPT.NEXTVAL),
			#{emp_code},
			#{dept_name},
			SYSDATE
		)
	</insert>
	
	<insert id="insertTeam" parameterType="Map">
		INSERT INTO
		team(
			team_no,
			dept_code,
			team_name,
			team_regidate
		)
		VALUES(
			TO_NUMBER(100 + SEQ_TEAM.NEXTVAL),
			#{dept_code},
			#{team_name},
			SYSDATE
		)
	</insert>
	
	<insert id="insertPosition" parameterType="Map">
		INSERT INTO
		position(
			position_code,
			position_name,
			emp_code
		)
		VALUES(
			#{emp_code}||'P'||#{p_code},
			#{position_name},
			#{emp_code}
		)
	</insert>
	
	

	
<!--  
	<update id="updateDept" parameterType="Map">
		UPDATE
			dept
		SET 
		<if test="emp_no != null">
			emp_no = #{emp_no},
		</if>
			dept_name = #{dept_name}
		WHERE 
			dept_name = 
	</update>
-->		
	<update id="updateTeamLeader" parameterType="Map">
		<choose>
			<when test="memberList.size != 0">
				UPDATE 
					members
				SET
					m_team_leader = #{m_team_leader}
				WHERE
					m_id IN
					<foreach collection="memberList" item="member" separator="," open="(" close=")">
						#{member}
					</foreach>
			</when>
		</choose>
	</update>
	
	
	<update id="updateDeptLeader" parameterType="Map">
		<choose>
			<when test="memberList.size != 0">
				UPDATE 
					members 
				SET 
					m_dept_leader = #{m_dept_leader}
				WHERE 
					m_id IN
					<foreach collection="memberList" item="member" separator="," open="(" close=")">
						#{member}
					</foreach>
			</when>
		</choose>
	</update>
	
	
	
</mapper>